@using BookShop.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@inject SignInManager<BookShopUser> SignInManager
@inject UserManager<BookShopUser> UserManager

@{
	ViewData["Title"] = "Profile";
	Layout = "~/Views/Shared/_LayoutUser.cshtml";
}
<link rel="preconnect" href="https://fonts.gstatic.com">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css" integrity="sha512-HK5fgLBL+xu6dm/Ii3z4xhlSUyZgTT9tuc/hSrtw6uzJOvgRr2a9jyxxT1ely+B+xFAmJKVSTbpM/CuL7qxO8w==" crossorigin="anonymous" />
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
<!-- custom css file link  -->
<link rel="stylesheet" href="~/css/profile.css">

<div class="container mt-4">
	@*<div class="d-flex align-items-center justify-content-center">
		<form class="row g-3 fs-3">
		<div class="col-md-6 fs-3">
		<label for="inputEmail4" class="form-label">Email</label>
		<input type="email" class="form-control p-3 fs-3" id="inputEmail4" value="@UserManager.GetUserName(User)" readonly>
		</div>
		<div class="col-md-6 fs-3">
		<label for="inputPassword4" class="form-label">Date of Birth</label>
		<input type="text" class="form-control p-3 fs-3" id="inputPassword4">
		</div>
		<div class="col-12 fs-3">
		<label for="inputAddress" class="form-label">Address</label>
		<input type="text" class="form-control p-3 fs-3" id="inputAddress" placeholder="1234 Main St">
		</div>
		<div class="col-12 fs-3">
		<a type="submit" class="btn btn-primary p-2 fs-3">Save</a>
		<a type="submit" class="btn btn-primary p-2 fs-3">Cancel</a>
		</div>
		</form>
		</div>*@

	<div>
		<!-- Tab items -->
		<div class="tabs">
			<div class="tab-item active">
				<i class="tab-icon fas fa-user"></i>
				Profile
			</div>
			@if (User.IsInRole("Customer"))
			{
				<div class="tab-item">
					<i class="tab-icon fa-solid fa-book"></i>
					Ordered
				</div>
			}
			else
			{
				<div class="tab-item">
					<i class="tab-icon fa-solid fa-book"></i>
					Record Ordered
				</div>
			}
			@*<div class="tab-item">
				<i class="tab-icon fas fa-plus-circle"></i>
				Ember
			</div>
			<div class="tab-item">
				<i class="tab-icon fas fa-pen-nib"></i>
				Vue.JS
			</div>*@
			<div class="line"></div>
		</div>

		<!-- Tab content -->
		<div class="tab-content">
			<div class="tab-pane active">
				<div class="d-flex align-items-center justify-content-center">
					<form class="row g-3 fs-3">
						<div class="col-md-6 fs-3">
							<label for="inputEmail4" class="form-label">Email</label>
							<input type="email" class="form-control p-3 fs-3" id="inputEmail4" value="@UserManager.GetUserName(User)" readonly>
						</div>
						<div class="col-md-6 fs-3">
							<label for="inputPassword4" class="form-label">Date of Birth</label>
							<input type="date" class="form-control p-3 fs-3" id="inputPassword4">
						</div>
						<div class="col-12 fs-3">
							<label for="inputAddress" class="form-label">Address</label>
							<input type="text" class="form-control p-3 fs-3" id="inputAddress" placeholder="1234 Main St">
						</div>
						<div class="col-12 fs-3">
							<a type="submit" class="btn btn-primary p-2 fs-3">Save</a>
							<a type="submit" class="btn btn-primary p-2 fs-3">Cancel</a>
						</div>
					</form>
				</div>
			</div>
			<div class="tab-pane">
				<div class="container mt-5 border border-dark w-100 p-3">
            <form enctype="multipart/form-data" asp-controller="Order" asp-action="Checkout" method="post">
                <table class="table table-hover fs-3 aligns-items-center justify-content-center">
                    <thead>
                        <tr>
                            <th scope="col" class="text-center">Title</th>
                            <th scope="col" class="text-center">Image</th>
                            <th scope="col" class="text-center">Quantity</th>
                            <th scope="col" class="text-center">Price</th>
                            <th scope="col" class="text-center">Date</th>
                        </tr>
                    </thead>
                    <tbody class="aligns-items-center justify-content-center">
                            <tr>

                                <td class="text-center align-middle">Title Book</td>
                                <td class="text-center align-middle" style="width: 28%;">
                                    <img src="https://product.hstatic.net/200000343865/product/1_192_40f2b09a42e24a7ea63eff87962e7a2e.jpg" class="img-thumbnail w-25" alt="...">
                                </td>
                                <td class="text-center align-middle" style="width: 10%;">
                                    <div class="col-sm">
                                        <input type="number" name="" value="2" class="fs-3 form-control text-center" readonly>
                                    </div>
                                </td>
                                <td class="text-center align-middle">$ 1000 </td>
								<td class="text-center align-middle">20/02/2001 </td>
                               @* <td class="text-center align-middle">
                                    <a asp-action= "Remove" asp-route-Isbn = "" class="btn btn-danger p-3 fs-3 fa-solid fa-trash-can"></a>
                                </td>*@
                            </tr>
                    </tbody>
                </table>
                @*<div class="d-flex flex-row-reverse" style="margin-right: 4%;">
                    <a class="btn btn-success p-3 fs-3">Checkout</a>
                </div>*@
            </form>
        </div>
			</div>
			<div class="tab-pane">
				<h2>Ember</h2>
				<p>Ember.js is a productive, battle-tested JavaScript framework for building modern web applications. It includes everything you need to build rich UIs that work on any device.</p>
			</div>
			<div class="tab-pane">
				<h2>Vue.js</h2>
				<p>Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. </p>
			</div>
		</div>
	</div>
</div>

<script>
		const $ = document.querySelector.bind(document);
	const $$ = document.querySelectorAll.bind(document);

	const tabs = $$(".tab-item");
	const panes = $$(".tab-pane");

	const tabActive = $(".tab-item.active");
	const line = $(".tabs .line");

	// SonDN fixed - Active size wrong size on first load.
	// Original post: https://www.facebook.com/groups/649972919142215/?multi_permalinks=1175881616551340
	requestIdleCallback(function () {
		line.style.left = tabActive.offsetLeft + "px";
		line.style.width = tabActive.offsetWidth + "px";
	});

	tabs.forEach((tab, index) => {
		const pane = panes[index];

		tab.onclick = function () {
			$(".tab-item.active").classList.remove("active");
			$(".tab-pane.active").classList.remove("active");

			line.style.left = this.offsetLeft + "px";
			line.style.width = this.offsetWidth + "px";

			this.classList.add("active");
			pane.classList.add("active");
		};
	});

</script>